// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.217.4/containers/docker-existing-dockerfile
{
	"name": "Existing Dockerfile",
	"image": "silarsis/infra-util",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../Dockerfile",

	// Set *default* container specific settings.json values on container create.
	"settings": {},
	
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// NOTE: the .aws dir is mapped in outside the homedir, and env variables set to point to it, because
	// vs code is doing something funky with the homedir and overriding anything in there.
	"mounts": [
		"source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind",
		"source=${localEnv:HOME}/.aws,target=/var/run/.aws,type=bind,consistency=cached",
//		"source=/tmp/.X11-unix,target=/tmp/.X11-unix,type=bind",
		"source=${localEnv:HOME}/.ssh,target=/var/run/.ssh,type=bind,consistency=cached"
	],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "kevin.littlejohn",

    "containerEnv": {
        "AWS_PROFILE": "${localEnv:AWS_PROFILE}",
		"AWS_CONFIG_FILE": "/var/run/.aws/config",
		"AWS_SHARED_CREDENTIALS_FILE": "/var/run/.aws/credentials",
		"DISPLAY": "${localEnv:DISPLAY}",
		"WORKSPACE_FOLDER": "${containerWorkspaceFolder}"
    },
	"runArgs": ["--net=host"]
}
